"Site Reliability Engineering" ("SRE") is a discipline that incorporates aspects of software engineering and applies them to infrastructure and operations problems. The main goals are to create ultra-scalable and highly reliable software systems. According to Ben Treynor, founder of Google's Site Reliability Team, SRE is "what happens when a software engineer is tasked with what used to be called operations."

== History ==
Site Reliability Engineering was created at Google around 2003 when Ben Treynor was hired to lead a team of seven software engineers to run a production environment. The team was tasked to make Google's sites run smoothly, efficiently, and more reliably. Early on, Google's large-scale systems required the company to come up with new paradigms on how to manage such large systems and at the same time introduce new features continuously but at a very high-quality end user experience. The SRE footprint at Google is now larger than 1500 engineers. Many products have small to medium sized SRE teams supporting them, though not all products have SREs. The SRE processes that have been honed over the years are being used by other, mainly large scale, companies that are also starting to implement this paradigm. Intuit, ServiceNow, Microsoft, Apple, Twitter, Facebook, Dropbox, Amazon, Target, Dell Technologies, IBM, Xero, Oracle, Zalando, Acquia, VMware, GitHub, Waze, Home Depot, Capital One, and Ticketmaster have all put together SRE teams.

== Roles ==
A site reliability engineer (SRE) will spend up to 50% of their time doing "ops" related work such as issues, on-call, and manual intervention. Since the software system that an SRE oversees is expected to be highly automatic and self-healing, the SRE should spend the other 50% of their time on development tasks such as new features, scaling or automation. The ideal SRE candidate is a highly skilled system administrator with knowledge of code and automation.

=== DevOps vs SRE ===

Coined around 2008, DevOps is a philosophy of cross team empathy and business alignment.  It's also been associated with a practice that encompasses automation of manual tasks, continuous integration and continuous delivery.  SRE and DevOps share the same foundational principles. SRE is viewed by many (as cited in the Google SRE book) as a "specific implementation of DevOps with some idiosyncratic extensions."  SREs, being developers themselves, will naturally bring solutions that help remove the barriers between development teams and operations teams.

DevOps defines 5 key pillars of success:

# Reduce organizational silos
# Accept failure as normal
# Implement gradual changes
# Leverage tooling and automation
# Measure everything

SRE satisfies the DevOps pillars as follows:

# Reduce organizational silos
#* SRE shares ownership with developers to create shared responsibility
#* SREs use the same tools that developers use, and vice versa
# Accept failure as normal
#* SREs embrace risk
#* SRE quantifies failure and availability in a prescriptive manner using Service Level Indicators (SLIs) and Service Level Objectives (SLOs)
#* SRE mandates blameless post mortems
# Implement gradual changes
#* SRE encourages developers and product owners to move quickly by reducing the cost of failure
# Measure everything
#* SRE defines prescriptive ways to measure values
#* SRE fundamentally believes that systems operation is a software problem

==See also==
* Cloud computing
* Data center
* High availability software
* Operations management

* Operations, administration and management
* Reliability engineering
* System administration

== References ==
; General
* Site Reliability Engineering, O'Reilly Media, April 2016, Betsy Beyer, Chris Jones, Jennifer Petoff, Niall Richard Murphy, 
* The Practice of Cloud System Administration: Designing and Operating Large Distributed Systems, Volume 2, Thomas Limoncelli, 

== External links ==
* [https://landing.google.com/sre/interview/ben-treynor.html Google - Site Reliability Engineering interview with Ben Treynor]
* [https://landing.google.com/sre/book.html Google - Site Reliability Engineering book]
* [https://landing.google.com/sre/books/ Google SRE Books]

Category:Google
Category:2003 introductions
Category:Software engineering
Category:Reliability engineering
